{"ast":null,"code":"var _jsxFileName = \"/Users/becca/Desktop/lambda2/Unit 2/Unit 2: Sprint 4 -- Build Week/Front-end/src/Components/LoginPage/LoginContainter.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport LogInForm from './Login';\nimport schema from '../validations/loginSchema';\nimport axios from 'axios';\nimport * as yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialFormValues = {\n  username: '',\n  password: ''\n};\nconst initialFormErrors = {\n  username: '',\n  password: ''\n};\nconst initialLogIn = [];\nconst initialDisabled = true;\nexport default function newLogIn(props) {\n  _s();\n\n  const [logIn, setLogIn] = useState(initialLogIn);\n  const [formValues, setFormValues] = useState(initialFormValues);\n  const [formErrors, setFormErrors] = useState(initialFormErrors);\n  const [disabled, setDisabled] = useState(initialDisabled);\n\n  const postNewLogIn = newUserLoggingIn => {\n    axios.post('https://reqres.in/api/orders', newUserLogIn).then(res => {\n      setOrder([...order, res.data]);\n      setFormValues(initialFormValues);\n      console.log('Here is postNewlogin', postNewLogIn);\n    }).catch(err => {\n      debugger;\n      console.error(err);\n      setFormValues(initialFormValues);\n    });\n  };\n\n  const validate = (name, value) => {\n    yup.reach(schema, name).validate(value).then(valid => {\n      setFormErrors({ ...formErrors,\n        [name]: ''\n      });\n    }).catch(err => {\n      setFormErrors({ ...formErrors,\n        [name]: err.errors[0]\n      });\n    });\n  };\n\n  const inputChange = (name, value) => {\n    validate(name, value);\n    setFormValues({ ...formValues,\n      [name]: value\n    });\n  };\n\n  const formSubmit = () => {\n    const newUserLoggingIn = {\n      username: formValues.username.trim(),\n      password: formValues.password.trim()\n    };\n    postNewLogIn(newUserLoggingIn);\n  };\n\n  useEffect(() => {\n    schema.isValid(formValues).then(valid => {\n      setDisabled(!valid);\n    });\n  }, [formValues]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"log-in-div\",\n    children: /*#__PURE__*/_jsxDEV(LogInForm, {\n      className: \"logIn-form\",\n      values: formValues,\n      change: inputChange,\n      submit: formSubmit,\n      disabled: disabled,\n      errors: formErrors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 7\n  }, this);\n}\n\n_s(newLogIn, \"y3uXzOgLyXpckjApPMPzSjS+zlQ=\");","map":{"version":3,"sources":["/Users/becca/Desktop/lambda2/Unit 2/Unit 2: Sprint 4 -- Build Week/Front-end/src/Components/LoginPage/LoginContainter.js"],"names":["React","useState","useEffect","LogInForm","schema","axios","yup","initialFormValues","username","password","initialFormErrors","initialLogIn","initialDisabled","newLogIn","props","logIn","setLogIn","formValues","setFormValues","formErrors","setFormErrors","disabled","setDisabled","postNewLogIn","newUserLoggingIn","post","newUserLogIn","then","res","setOrder","order","data","console","log","catch","err","error","validate","name","value","reach","valid","errors","inputChange","formSubmit","trim","isValid"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport LogInForm from './Login';\nimport schema from '../validations/loginSchema';\nimport axios from 'axios';\nimport * as yup from 'yup';\n\nconst initialFormValues = {\n    username: '',\n    password: '',\n}\nconst initialFormErrors = {\n    username: '',\n    password: '',\n}\n\nconst initialLogIn = []\nconst initialDisabled = true\n\nexport default function newLogIn(props) {\n  const [logIn, setLogIn] = useState(initialLogIn)\n  const [formValues, setFormValues] = useState(initialFormValues)\n  const [formErrors, setFormErrors] = useState(initialFormErrors)\n  const [disabled, setDisabled] = useState(initialDisabled)\n\n  const postNewLogIn = newUserLoggingIn => {\n    axios\n      .post('https://reqres.in/api/orders', newUserLogIn)\n      .then((res) => {\n        setOrder([...order, res.data,])\n        setFormValues(initialFormValues);\n        console.log('Here is postNewlogin', postNewLogIn)\n      }).catch(err => {\n        debugger;\n        console.error(err);\n        setFormValues(initialFormValues)\n      })\n  }\n\n  const validate = (name, value) => {\n    yup\n      .reach(schema, name)\n      .validate(value)\n      .then((valid) => {\n        setFormErrors(\n          {...formErrors,[name]: '',}\n        );\n      })\n      .catch((err) => {\n        setFormErrors(\n          { ...formErrors,[name]: err.errors[0]}\n        );\n      });\n  }\n\n  const inputChange = (name, value) => {\n    validate(name, value);\n    setFormValues({ ...formValues, [name]: value });\n  };\n\n  const formSubmit = () => {\n      const newUserLoggingIn = {\n        username: formValues.username.trim(),\n        password: formValues.password.trim(),\n      }\n      postNewLogIn(newUserLoggingIn);\n  }\n  useEffect(() => {\n    schema.isValid(formValues).then((valid) => {\n      setDisabled(!valid)\n     });\n  }, [formValues])\n\n  return(\n      <div className='log-in-div'>\n          <LogInForm className='logIn-form'\n            values={formValues}\n            change={inputChange}\n            submit={formSubmit}\n            disabled={disabled}\n            errors={formErrors}\n          />\n      </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}