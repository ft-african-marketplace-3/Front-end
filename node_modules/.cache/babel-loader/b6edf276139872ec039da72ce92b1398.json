{"ast":null,"code":"import * as React from 'react';\nimport { useThree, useFrame, createPortal } from '@react-three/fiber';\nimport { Object3D, Matrix4, Quaternion, Vector3, Scene } from 'three';\nimport { OrthographicCamera } from './OrthographicCamera.js';\nimport { useCamera } from './useCamera.js';\nconst Context = /*#__PURE__*/React.createContext({});\n\nconst useGizmoContext = () => {\n  return React.useContext(Context);\n};\n\nconst turnRate = 2 * Math.PI; // turn rate in angles per second\n\nconst dummy = new Object3D();\nconst matrix = new Matrix4();\nconst [q1, q2] = [new Quaternion(), new Quaternion()];\nconst target = new Vector3();\nconst targetPosition = new Vector3();\n\nconst GizmoHelper = ({\n  alignment = 'bottom-right',\n  margin = [80, 80],\n  onUpdate,\n  onTarget,\n  children: GizmoHelperComponent\n}) => {\n  const size = useThree(({\n    size\n  }) => size);\n  const mainCamera = useThree(({\n    camera\n  }) => camera); // @ts-expect-error new in @react-three/fiber@7.0.5\n\n  const defaultControls = useThree(({\n    controls\n  }) => controls);\n  const gl = useThree(({\n    gl\n  }) => gl);\n  const scene = useThree(({\n    scene\n  }) => scene);\n  const invalidate = useThree(({\n    invalidate\n  }) => invalidate);\n  const backgroundRef = React.useRef();\n  const gizmoRef = React.useRef();\n  const virtualCam = React.useRef(null);\n  const [virtualScene] = React.useState(() => new Scene());\n  const animating = React.useRef(false);\n  const radius = React.useRef(0);\n  const focusPoint = React.useRef(new Vector3(0, 0, 0));\n\n  const tweenCamera = direction => {\n    animating.current = true;\n    if (defaultControls || onTarget) focusPoint.current = (defaultControls == null ? void 0 : defaultControls.target) || (onTarget == null ? void 0 : onTarget());\n    radius.current = mainCamera.position.distanceTo(target); // Rotate from current camera orientation\n\n    q1.copy(mainCamera.quaternion); // To new current camera orientation\n\n    targetPosition.copy(direction).multiplyScalar(radius.current).add(target);\n    dummy.lookAt(targetPosition);\n    q2.copy(dummy.quaternion);\n    invalidate();\n  };\n\n  const animateStep = delta => {\n    if (!animating.current) return;\n\n    if (q1.angleTo(q2) < 0.01) {\n      animating.current = false;\n      return;\n    }\n\n    const step = delta * turnRate; // animate position by doing a slerp and then scaling the position on the unit sphere\n\n    q1.rotateTowards(q2, step); // animate orientation\n\n    mainCamera.position.set(0, 0, 1).applyQuaternion(q1).multiplyScalar(radius.current).add(focusPoint.current);\n    mainCamera.up.set(0, 1, 0).applyQuaternion(q1).normalize();\n    mainCamera.quaternion.copy(q1);\n    if (onUpdate) onUpdate();else if (defaultControls) defaultControls.update();\n    invalidate();\n  };\n\n  React.useEffect(() => {\n    if (scene.background) {\n      //Interchange the actual scene background with the virtual scene\n      backgroundRef.current = scene.background;\n      scene.background = null;\n      virtualScene.background = backgroundRef.current;\n    }\n\n    return () => {\n      // reset on unmount\n      if (backgroundRef.current) {\n        scene.background = backgroundRef.current;\n      }\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const beforeRender = () => {\n    var _gizmoRef$current; // Sync gizmo with main camera orientation\n\n\n    matrix.copy(mainCamera.matrix).invert();\n    (_gizmoRef$current = gizmoRef.current) == null ? void 0 : _gizmoRef$current.quaternion.setFromRotationMatrix(matrix);\n  };\n\n  useFrame((_, delta) => {\n    if (virtualCam.current && gizmoRef.current) {\n      animateStep(delta);\n      beforeRender();\n      gl.autoClear = false;\n      gl.clearDepth();\n      gl.render(virtualScene, virtualCam.current);\n    }\n  });\n  const gizmoHelperContext = {\n    tweenCamera,\n    raycast: useCamera(virtualCam)\n  }; // Position gizmo component within scene\n\n  const [marginX, marginY] = margin;\n  const x = alignment.endsWith('-left') ? -size.width / 2 + marginX : size.width / 2 - marginX;\n  const y = alignment.startsWith('top-') ? size.height / 2 - marginY : -size.height / 2 + marginY;\n  return createPortal( /*#__PURE__*/React.createElement(Context.Provider, {\n    value: gizmoHelperContext\n  }, /*#__PURE__*/React.createElement(OrthographicCamera, {\n    ref: virtualCam,\n    makeDefault: false,\n    position: [0, 0, 200]\n  }), /*#__PURE__*/React.createElement(\"group\", {\n    ref: gizmoRef,\n    position: [x, y, 0]\n  }, GizmoHelperComponent)), virtualScene);\n};\n\nexport { GizmoHelper, useGizmoContext };","map":{"version":3,"sources":["/Users/becca/Desktop/lambda2/Unit 2/Unit 2: Sprint 4 -- Build Week/Front-end/node_modules/@react-three/drei/core/GizmoHelper.js"],"names":["React","useThree","useFrame","createPortal","Object3D","Matrix4","Quaternion","Vector3","Scene","OrthographicCamera","useCamera","Context","createContext","useGizmoContext","useContext","turnRate","Math","PI","dummy","matrix","q1","q2","target","targetPosition","GizmoHelper","alignment","margin","onUpdate","onTarget","children","GizmoHelperComponent","size","mainCamera","camera","defaultControls","controls","gl","scene","invalidate","backgroundRef","useRef","gizmoRef","virtualCam","virtualScene","useState","animating","radius","focusPoint","tweenCamera","direction","current","position","distanceTo","copy","quaternion","multiplyScalar","add","lookAt","animateStep","delta","angleTo","step","rotateTowards","set","applyQuaternion","up","normalize","update","useEffect","background","beforeRender","_gizmoRef$current","invert","setFromRotationMatrix","_","autoClear","clearDepth","render","gizmoHelperContext","raycast","marginX","marginY","x","endsWith","width","y","startsWith","height","createElement","Provider","value","ref","makeDefault"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useThree, useFrame, createPortal } from '@react-three/fiber';\nimport { Object3D, Matrix4, Quaternion, Vector3, Scene } from 'three';\nimport { OrthographicCamera } from './OrthographicCamera.js';\nimport { useCamera } from './useCamera.js';\n\nconst Context = /*#__PURE__*/React.createContext({});\nconst useGizmoContext = () => {\n  return React.useContext(Context);\n};\nconst turnRate = 2 * Math.PI; // turn rate in angles per second\n\nconst dummy = new Object3D();\nconst matrix = new Matrix4();\nconst [q1, q2] = [new Quaternion(), new Quaternion()];\nconst target = new Vector3();\nconst targetPosition = new Vector3();\nconst GizmoHelper = ({\n  alignment = 'bottom-right',\n  margin = [80, 80],\n  onUpdate,\n  onTarget,\n  children: GizmoHelperComponent\n}) => {\n  const size = useThree(({\n    size\n  }) => size);\n  const mainCamera = useThree(({\n    camera\n  }) => camera); // @ts-expect-error new in @react-three/fiber@7.0.5\n\n  const defaultControls = useThree(({\n    controls\n  }) => controls);\n  const gl = useThree(({\n    gl\n  }) => gl);\n  const scene = useThree(({\n    scene\n  }) => scene);\n  const invalidate = useThree(({\n    invalidate\n  }) => invalidate);\n  const backgroundRef = React.useRef();\n  const gizmoRef = React.useRef();\n  const virtualCam = React.useRef(null);\n  const [virtualScene] = React.useState(() => new Scene());\n  const animating = React.useRef(false);\n  const radius = React.useRef(0);\n  const focusPoint = React.useRef(new Vector3(0, 0, 0));\n\n  const tweenCamera = direction => {\n    animating.current = true;\n    if (defaultControls || onTarget) focusPoint.current = (defaultControls == null ? void 0 : defaultControls.target) || (onTarget == null ? void 0 : onTarget());\n    radius.current = mainCamera.position.distanceTo(target); // Rotate from current camera orientation\n\n    q1.copy(mainCamera.quaternion); // To new current camera orientation\n\n    targetPosition.copy(direction).multiplyScalar(radius.current).add(target);\n    dummy.lookAt(targetPosition);\n    q2.copy(dummy.quaternion);\n    invalidate();\n  };\n\n  const animateStep = delta => {\n    if (!animating.current) return;\n\n    if (q1.angleTo(q2) < 0.01) {\n      animating.current = false;\n      return;\n    }\n\n    const step = delta * turnRate; // animate position by doing a slerp and then scaling the position on the unit sphere\n\n    q1.rotateTowards(q2, step); // animate orientation\n\n    mainCamera.position.set(0, 0, 1).applyQuaternion(q1).multiplyScalar(radius.current).add(focusPoint.current);\n    mainCamera.up.set(0, 1, 0).applyQuaternion(q1).normalize();\n    mainCamera.quaternion.copy(q1);\n    if (onUpdate) onUpdate();else if (defaultControls) defaultControls.update();\n    invalidate();\n  };\n\n  React.useEffect(() => {\n    if (scene.background) {\n      //Interchange the actual scene background with the virtual scene\n      backgroundRef.current = scene.background;\n      scene.background = null;\n      virtualScene.background = backgroundRef.current;\n    }\n\n    return () => {\n      // reset on unmount\n      if (backgroundRef.current) {\n        scene.background = backgroundRef.current;\n      }\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const beforeRender = () => {\n    var _gizmoRef$current;\n\n    // Sync gizmo with main camera orientation\n    matrix.copy(mainCamera.matrix).invert();\n    (_gizmoRef$current = gizmoRef.current) == null ? void 0 : _gizmoRef$current.quaternion.setFromRotationMatrix(matrix);\n  };\n\n  useFrame((_, delta) => {\n    if (virtualCam.current && gizmoRef.current) {\n      animateStep(delta);\n      beforeRender();\n      gl.autoClear = false;\n      gl.clearDepth();\n      gl.render(virtualScene, virtualCam.current);\n    }\n  });\n  const gizmoHelperContext = {\n    tweenCamera,\n    raycast: useCamera(virtualCam)\n  }; // Position gizmo component within scene\n\n  const [marginX, marginY] = margin;\n  const x = alignment.endsWith('-left') ? -size.width / 2 + marginX : size.width / 2 - marginX;\n  const y = alignment.startsWith('top-') ? size.height / 2 - marginY : -size.height / 2 + marginY;\n  return createPortal( /*#__PURE__*/React.createElement(Context.Provider, {\n    value: gizmoHelperContext\n  }, /*#__PURE__*/React.createElement(OrthographicCamera, {\n    ref: virtualCam,\n    makeDefault: false,\n    position: [0, 0, 200]\n  }), /*#__PURE__*/React.createElement(\"group\", {\n    ref: gizmoRef,\n    position: [x, y, 0]\n  }, GizmoHelperComponent)), virtualScene);\n};\n\nexport { GizmoHelper, useGizmoContext };\n"]},"metadata":{},"sourceType":"module"}